version: '3.8'

networks:
  loki:
services:
  speedbump:
    build:
      context: speedbump
      dockerfile: Dockerfile
    command: ["--port=8080", "echo:8080"]
  echo:
    image: ealen/echo-server:0.8.12
    environment:
      - ENABLE__ENVIRONMENT=false
    ports:
      - "8080:8080"
  loki:
    image: grafana/loki:2.9.0
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - loki
  promtail:
    image: grafana/promtail:2.9.0
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml
    networks:
      - loki
  # http://localhost:3000
  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        /run.sh
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    networks:
      - loki
  hydra:
    image: oryd/hydra:v1.11.10
    ports:
      - "4444:4444"
    command:
      serve all --dangerous-force-http
    environment:
      - URLS_SELF_ISSUER=http://localhost:4444/
      - DSN=memory
      - SECRETS_SYSTEM=OpcPXxgE6U9xboFAjzAyyaSouqy15OZh
      - URLS_CONSENT=http://localhost:9020/consent
      - URLS_LOGIN=http://localhost:9020/login
    logging:
      # docker plugin install grafana/loki-docker-driver:2.9.1 --alias loki --grant-all-permissions
      driver: loki
      options:
        loki-url: http://host.docker.internal:3100/loki/api/v1/push
  pep-key:
    build:
      args:
        - ARTIFACT=gokas
      context: ..
      dockerfile: Dockerfile
    environment:
      - POSTGRES_HOST=localhost
      - POSTGRES_DATABASE=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=mysecretpassword
      - PKCS11_MODULE_PATH=/usr/local/Cellar/softhsm/2.6.1/lib/softhsm/libsofthsm2.so
      - PKCS11_SLOT_INDEX=0
      - PKCS11_PIN=12345
      - PKCS11_LABEL_PUBKEY_RSA=development-rsa-kas
      - PKCS11_LABEL_PUBKEY_EC=development-ec-kas
      - PRIVATE_KEY_RSA_PATH=../../kas-private.pem
      - OIDC_ISSUER=http://localhost:65432/auth/realms/tdf
      - LOG_FORMAT=text
      - LOG_LEVEL=DEBUG
    logging:
      # docker plugin install grafana/loki-docker-driver:2.9.1 --alias loki --grant-all-permissions
      driver: loki
      options:
        loki-url: http://host.docker.internal:3100/loki/api/v1/push
  pep-cli:
    command: ["ls"]
    build:
      args:
        - ARTIFACT=cli
      target: cli
      context: ..
      dockerfile: Dockerfile
    environment:
      - OIDC_ISSUER=http://localhost:65432/auth/realms/tdf
      - AUTHORIZATION_URL=http://authorization
      - LOG_FORMAT=text
      - LOG_LEVEL=DEBUG
    logging:
      # docker plugin install grafana/loki-docker-driver:2.9.1 --alias loki --grant-all-permissions
      driver: loki
      options:
        loki-url: http://host.docker.internal:3100/loki/api/v1/push
  authorization:
    build:
      args:
        - ARTIFACT=authorization
      context: ..
      dockerfile: Dockerfile
    environment:
      - LOG_FORMAT=text
      - LOG_LEVEL=DEBUG
    logging:
      # docker plugin install grafana/loki-docker-driver:2.9.1 --alias loki --grant-all-permissions
      driver: loki
      options:
        loki-url: http://host.docker.internal:3100/loki/api/v1/push
