name: SonarCloud
on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  gotest:
    name: 'Generate Golang Test Reports'
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:

      - name: 'Checkout repo'
        uses: actions/checkout@v3

      - name: 'Setup Go'
        uses: actions/setup-go@v3
        with:
          go-version: '${{ inputs.go-version }}'
          cache: true

      - name: 'Generate Golang Test Reports'
        run: go test -v -coverprofile coverage.out -json ./... | tee coverage.json
      - uses: seriousben/go-patch-cover-action@v1

      - name: 'Archive Golang Test Results'
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: coverage.*
          retention-days: 1

  sonarcloud:
    name: 'SonarCloud'
    runs-on: ubuntu-latest
    needs: [gotest]
    permissions:
      contents: read

    steps:
      - name: 'Checkout repo'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 'Download Code Coverage Report'
        uses: actions/download-artifact@v3
        with:
          name: code-coverage-report

      - name: 'SonarCloud Scan'
        uses: SonarSource/sonarcloud-github-action@v2.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Update coverage report
        uses: ncruces/go-coverage-report@v0